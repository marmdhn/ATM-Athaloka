@page "/admin/{UserId:int}/updateAdmin"
@using ATMBank_.Data;
@using ATMBank_.Models;
@using System.Text;
@using System.Security.Cryptography;
@using ATMBank_.Pages.Pages_Utils
@inject AdminService AdminService
@inject UserService UserService
@inject NavigationManager NavigationManager

<PageTitle>ATM Bank</PageTitle>

<div class="bg-admin">
    <div class="container pt-3">

        <Navbar roleId="_user.role" userId="UserId"></Navbar>

        <div class="row">
            <div class="col-lg-12 text-white text-center mt-5">
                <h3 class="fw-bold" style="color: #585858">Update Akun</h3>
            </div>
        </div>

        <div class="row row-input m-auto">
            <div class="col-lg-6 col-md-4 side-image-update-nasabah"></div>
            <div class="col-lg-6 col-md-4 right m-auto">
                <div class="input-box" style="color: #585858">
                    <EditForm Model="_admin" OnInvalidSubmit="HandleSubmit">
                        <div class="mb-3">
                            <label for="nama" class="form-label fw-bold">Nama:</label>
                            <InputText id="nama" @bind-Value="_admin.admin_name" class="form-control">
                            </InputText>
                        </div>
                        <div class="mb-3">
                            <label for="UsernameAdmin" class="form-label fw-bold">Username:</label>
                            <InputText id="UsernameAdmin" @bind-Value="_admin.admin_username" class="form-control">
                            </InputText>
                        </div>
                        <div class="mb-3">
                            <label for="PasswordAdmin" class="form-label fw-bold">Password Baru:</label>
                            <div class="input-group">
                                <InputText id="PasswordAdmin"
                                           @bind-Value="_newPassword"
                                           type="@(_isPasswordVisible ? "text" : "password")"
                                           class="form-control">
                                </InputText>
                                <button type="button" class="btn btn-secondary" @onclick="TogglePasswordVisibility">
                                    <i class="bi @(_isPasswordVisible ? "bi-eye-slash" : "bi-eye")"></i>
                                </button>
                            </div>
                        </div>


                        <button type="submit" class="btn btn-save-admin me-2" @onclick="HandleSubmit">Save</button>
                        <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
    <Footer roleId="_user.role"></Footer>
</div>


@code {

    [Parameter]
    public int UserId { get; set; }

    Admin _admin = new Admin();

    User _user = new User();

    private string _newPassword = string.Empty;
    
    private bool _isPasswordVisible;
    
    protected override async Task OnInitializedAsync()
    {
        _admin = await Task.Run(() => AdminService.GetAdminByUserId(this.UserId));
        _user = await Task.Run(() => UserService.GetUserById(this.UserId));
    }

    protected async void HandleSubmit()
    {
        if (!string.IsNullOrEmpty(_newPassword))
        {
            string md5Password = GetMd5Hash(_newPassword);
            _user.password = md5Password;
        }

        await UserService.UpdateUser(this._user);
        await AdminService.UpdateAdmin(this._admin);

        NavigationManager.NavigateTo($"/admin/{UserId}/chooseATM");
    }

    private string GetMd5Hash(string input)
    {
        using (MD5 md5Hash = MD5.Create())
        {
            byte[] data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(input));

            StringBuilder sBuilder = new StringBuilder();

            for (int i = 0; i < data.Length; i++)
            {
                sBuilder.Append(data[i].ToString("x2"));
            }

            return sBuilder.ToString();
        }
    }
    
    void TogglePasswordVisibility()
    {
        _isPasswordVisible = !_isPasswordVisible;
    }

    void Cancel()
    {
        NavigationManager.NavigateTo($"/admin/{UserId}/chooseATM");
    }

}
